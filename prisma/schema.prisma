// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String 
  surname String
  email String @unique
  emailVerifed DateTime?
  phone String
  image String?
  hashedPassword String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  role Role @default(USER)

  companyId String @db.ObjectId
  company Company @relation(fields: [companyId], references: [id])

  equipmentIds String[] @db.ObjectId
  equipments Equipment[] @relation(fields: [equipmentIds], references: [id])

  branchId String @db.ObjectId
  branch Branch @relation(fields: [branchId], references: [id])
  
  account Account[]
}

model Account {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  type String
  provider String
  providerAccountId String
  refresh_token String? @db.String
  access_token String? @db.String
  expires_at Int?
  token_type String?
  scope String?
  id_token String? @db.String
  session_state String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Equipment {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  label String
  address String
  name String
  serial_number String
  images String[]
  location String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userIds String[] @db.ObjectId
  users User[] @relation(fields: [userIds], references: [id])

  branchId String @db.ObjectId
  branches Branch @relation(fields: [branchId], references: [id])

  companyId String @db.ObjectId
  company Company @relation(fields: [companyId], references: [id])
}

model Branch {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  path String?
  label String
  address String 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  equipments Equipment[]
  users User[]

  companyId String @db.ObjectId
  company Company @relation(fields: [companyId], references: [id])
}


model Company {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  label String
  address String
  image String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  users User[]
  branches Branch[]
  equipments Equipment[]
}


enum Role {
  USER
  ADMIN
}